:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the MultiplayerSpawner.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_MultiplayerSpawner:

MultiplayerSpawner
==================

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`



Properties
----------

+---------------------------------+-------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`auto_spawn<class_MultiplayerSpawner_property_auto_spawn>`   | ``false``        |
+---------------------------------+-------------------------------------------------------------------+------------------+
| :ref:`int<class_int>`           | :ref:`spawn_limit<class_MultiplayerSpawner_property_spawn_limit>` | ``0``            |
+---------------------------------+-------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>` | :ref:`spawn_path<class_MultiplayerSpawner_property_spawn_path>`   | ``NodePath("")`` |
+---------------------------------+-------------------------------------------------------------------+------------------+

Methods
-------

+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_Object>` | :ref:`_spawn_custom<class_MultiplayerSpawner_method__spawn_custom>` **(** :ref:`Variant<class_Variant>` data **)** |virtual|   |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`add_spawnable_scene<class_MultiplayerSpawner_method_add_spawnable_scene>` **(** :ref:`String<class_String>` path **)**   |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`clear_spawnable_scenes<class_MultiplayerSpawner_method_clear_spawnable_scenes>` **(** **)**                              |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>` | :ref:`get_spawnable_scene<class_MultiplayerSpawner_method_get_spawnable_scene>` **(** :ref:`int<class_int>` path **)** |const| |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`get_spawnable_scene_count<class_MultiplayerSpawner_method_get_spawnable_scene_count>` **(** **)** |const|                |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Node<class_Node>`     | :ref:`spawn<class_MultiplayerSpawner_method_spawn>` **(** :ref:`Variant<class_Variant>` data=null **)**                        |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_MultiplayerSpawner_signal_despawned:

- **despawned** **(** :ref:`int<class_int>` scene_id, :ref:`Node<class_Node>` node **)**

----

.. _class_MultiplayerSpawner_signal_spawned:

- **spawned** **(** :ref:`int<class_int>` scene_id, :ref:`Node<class_Node>` node **)**

Property Descriptions
---------------------

.. _class_MultiplayerSpawner_property_auto_spawn:

- :ref:`bool<class_bool>` **auto_spawn**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_auto_spawning(value) |
+-----------+--------------------------+
| *Getter*  | is_auto_spawning()       |
+-----------+--------------------------+

----

.. _class_MultiplayerSpawner_property_spawn_limit:

- :ref:`int<class_int>` **spawn_limit**

+-----------+------------------------+
| *Default* | ``0``                  |
+-----------+------------------------+
| *Setter*  | set_spawn_limit(value) |
+-----------+------------------------+
| *Getter*  | get_spawn_limit()      |
+-----------+------------------------+

----

.. _class_MultiplayerSpawner_property_spawn_path:

- :ref:`NodePath<class_NodePath>` **spawn_path**

+-----------+-----------------------+
| *Default* | ``NodePath("")``      |
+-----------+-----------------------+
| *Setter*  | set_spawn_path(value) |
+-----------+-----------------------+
| *Getter*  | get_spawn_path()      |
+-----------+-----------------------+

Method Descriptions
-------------------

.. _class_MultiplayerSpawner_method__spawn_custom:

- :ref:`Object<class_Object>` **_spawn_custom** **(** :ref:`Variant<class_Variant>` data **)** |virtual|

----

.. _class_MultiplayerSpawner_method_add_spawnable_scene:

- void **add_spawnable_scene** **(** :ref:`String<class_String>` path **)**

----

.. _class_MultiplayerSpawner_method_clear_spawnable_scenes:

- void **clear_spawnable_scenes** **(** **)**

----

.. _class_MultiplayerSpawner_method_get_spawnable_scene:

- :ref:`String<class_String>` **get_spawnable_scene** **(** :ref:`int<class_int>` path **)** |const|

----

.. _class_MultiplayerSpawner_method_get_spawnable_scene_count:

- :ref:`int<class_int>` **get_spawnable_scene_count** **(** **)** |const|

----

.. _class_MultiplayerSpawner_method_spawn:

- :ref:`Node<class_Node>` **spawn** **(** :ref:`Variant<class_Variant>` data=null **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
